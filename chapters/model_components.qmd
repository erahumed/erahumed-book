# ERAHUMED model components

This Chapter provides detailed descriptions of the various components of the ERAHUMED model, briefly introduced in @sec-birds-eye-view.

## INP: Input Data {#sec-inp}

The purpose of this model component is simply to collect the empirical data that
provides the observational input to all subsequent modeling layers. This data consists of hydrological and meteorological time series data for the Albufera lake in the desired time frame.

### Input

The only inputs to this modeling layer are the two aforementioned time-series data-sets.

Hydrological data consists of the direct measurements of the Albufera lake's 
daily water levels and outflows. Since the lake has three estuaries (*Gola de Pujol*, *Gola del Perellonet* and *Gola del Perelló*), this data 
amounts to four daily time series. The actual dataset bundled with the ERAHUMED
software was obtained from the public data repository compiled by the *Confederación Hidrográfica del Júcar* (TODO: Ref.), and is described in more detail in [Appendix @sec-data-hydro].

Meteorological data consists of the daily measurements of precipitation and evapotranspiration per unit are, and temperature (average, maximum and minimum). This amounts to five daily the series. The actual data bundled with the ERAHUMED
software was obtained (TODO: where), and is described in more detail in [Appendix @sec-data-meteo].

The time-series inputs described above are collected in the table below (the common index $t$ refers to the time - *i.e.* day - of observation).

| Input                     | Units        | Description                       |
|---------------------------|--------------|-----------------------------------|
| $L_t$                     | $\text{m}$   | Lake water level                  |
| $O_t^{\text{Pujol}}$      | $\text{m}^3$ | *Pujol* daily outflow             |
| $O_t^{\text{Perelló}}$    | $\text{m}^3$ | *Perelló* daily outflow           |
| $O_t^{\text{Perellonet}}$ | $\text{m}^3$ | *Perellonet* daily outflow        |
| $\text{P}_t$              | $\text{mm}$  | Precipitation (per unit area)     |
| $\text{ETP}_t$            | $\text{mm}$  | Evapotranspiration (per unit area)|
| $T_t^{\text{max}}$        | $\text{°C}$  | Maximum temperature               |
| $T_t^{\text{min}}$        | $\text{°C}$  | Minimum temperature               |
| $T_t^{\text{ave}}$        | $\text{°C}$  | Average temperature               |

: Observational input to the ERAHUMED model (INP model component). {#tbl-inp-time-series}


### Output

This modeling layer does not involve any actual computation, and its output is simply a time-series data-set obtained as the combination of the two input data-sets, *i.e.* the collection of time series of @tbl-inp-time-series.


## HBA: Hydrological Balance of the Albufera lake {#sec-hba}

The purpose of this model component is to compute the total daily inflow to the Albufera lake. The relevant equation expressing the hydrological balance is:

$$
\text{Volume Change} = \text{Inflow} - \text{Outflow} + \text{Precipitation} - \text{Evapotranspiration}
$$ {#eq-hydro-balance-symbolic}

where the unknown is $\text{Inflow}$, whereas the remaining terms are obtained
from observational data, as described in the previous Section (@sec-inp).

### Input

The inputs specific to this layer are two numerical functions converting water heights into the water *volumes* that appear in @eq-hydro-balance-symbolic. Specifically:

* The lake's *storage curve* converts the measured lake's level into a total water volume.
* The *precipitation-evapotranspiration volume function* (or, for the sake of
brevity, *P-ETP function*), that converts precipitation and evapotranspiration values *per unit area* into an overall water volume difference.

Even though the R interface to the ERAHUMED software allows arbitrary definitions, the graphical user interface assumes a linear approximation for both these functions. Therefore, the storage curve is assumed to take the form:

$$
V_t = m \cdot L_t + q,
$$ {#eq-storage-function}
where $V_t$ is the (daily) water volume of the lake, $L_t$ the corresponding
water level (*cf.* @tbl-inp-time-series), and $m$ and $q$ are numerical coefficients^[In fact, for the purpose of computing volume *changes* entering the hydrological balance @eq-hydro-balance-symbolic, only the slope $m$ is required.]. Correspondingly, the P-ETP function reads: 

$$
\Delta V_t ^{\text{P-ETP}} = \alpha \cdot \text{P}_t - \beta\cdot \text{ETP}_t,
$$ {#eq-petp-function}
where the left-hand side represents the relevant water volume difference, whereas the $\text{P}$ and $\text{ETP}$ terms in the right-hand side are the measured precipitation and evapotranspiration levels per unit area (*cf.* @tbl-inp-time-series). The actual default values of $m$, $q$, $\alpha$ and $\beta$ are documented in [Appendix @sec-storage-curve].

### Output

The output of this model consists of the time-series collected in the table
below.

| Variable                  | Units        | Description                       |
|---------------------------|--------------|-----------------------------------|
| $V_t$                     | $\text{m}^3$ | Lake water volume                 | 
| $I_t$                     | $\text{m}^3$ | Lake total inflow                 |
| $O_t$                     | $\text{m}^3$ | Lake total outflow                |
: HBA model component outputs {#tbl-hba-output}

### Details

Using the notation introduced in the previous Subsections, we can rewrite @eq-hydro-balance-symbolic as follows:

$$
V_{t+1} - V_t = I_t -O_t +\Delta V^{\text {ETP}}_t,
$$ {#eq-hydro-balance-explicit}

where $V_t$ and $\Delta V^{\text {ETP}}_t$ are computed through the storage and
P-ETP functions, as in Eqs. [-@eq-storage-function] and [-@eq-petp-function]. 
The only terms that requires further clarification in @eq-hydro-balance-explicit
is $O_t$, the total outflow from the lake.

Strictly speaking, $O_t$ is not merely the sum of $O_t^{\text{Pujol}}$, 
$O_t^{\text{Perelló}}$ and $O_t^{\text{Perellonet}}$, but is rather calculated 
as follows:

$$
O_t = \max
\left[
O_t^{\text{Pujol}} + O_t^{\text{Perelló}} + O_t^{\text{Perellonet}},\, 
\Delta V^{\text {ETP}}_t+V_t-V_{t+1}
\right].
$$ {#eq-total-outflow}

The rationale is that the simple sum of estuaries outflows omits potentially 
important contributions from *water recirculation*, that is to say,
water being pumped out from the lake for rice-field irrigation, by the so-called 
*tancats*. Such amount of recirculated water is hard to estimate and,
in the lack of a better model, we simply assume this to be negligible, *except* 
when a positive amount is required by @eq-hydro-balance-explicit itself, due 
the physical constraint that $I_t \geq 0$.

Once $O_t$ is calculated through @eq-total-outflow, $I_t$ can be immediately 
obtained from @eq-hydro-balance-explicit. Notice that whenever the 
aforementioned compensating outflow term due to water recirculation is included 
(which happens when the maximum in Eq. [-@eq-total-outflow] is given by the 
second term), the total inflow is always estimated to be zero.

## HBP: Hydrological Balance of rice Paddy clusters

This modeling layer simulates the local hydrology (*i.e.* water levels, inflows
and outflows) of rice paddy clusters in the Albufera National Park. The 
simulation, that literally involves the generation of a synthetic data-set, is 
based on:

* The hydrology of the Albufera lake, which allows to constrain the total 
outflow of all rice paddies, assumed to be equal to the lake's total inflow
(the main output of the HBA layer, see @sec-hba).
* An estimate of the fraction of the total lake's inflow that comes from each
of the 26 ditches that flow into the Albufera.
* A subdivision of the rice fields surface into clusters that are assumed to
be hydrologically connected with a single ditch - meaning that the sum of 
outflows of clusters from the same group must equal the total flow through the
corresponding ditch.
* An ideal yearly management plan for the irrigation and draining of rice 
paddies.

### Input

As already mentioned, the simulation is based on a spatial clustering, which is 
described in greater detail in [Appendix @sec-data-rice-clusters]. For the 
present purposes, we stress that each cluster, consists of rice paddies of a 
definite rice variety, is labeled according to whether it is a *tancat* or not,
and, most importantly, is assumed to be hydrologically connected with a single 
ditch.

The yearly management plan for these clusters, is described in 
[Appendix @sec-data-albufera-management], and provides, for each day of the year 
$d$, the following:

* $\text{Ir}_d$: boolean expressing whether the cluster is supposed to be 
irrigated (if true) on day of year $d$.
* $\text{Dr}_d$: boolean expressing whether the cluster is supposed to be 
drained (if true) on day of year $d$.
* $\mathcal H _d$: ideal water level (in $\text{cm}$) of the cluster on day of 
year $d$.

As explained in [Appendix @sec-data-albufera-management], the management plan
depends on the rice variety and on the *tancat* label of a cluster.

In addition to these rather complex inputs, the model component requires the 
following numerical parameters:

* $k_\text{flow}$ (*Ideal flow rate*). Rate at which water flows through rice 
paddies when these are being simultaneously irrigated and drained, with the 
overall level being kept constant. Expressed in $\text{cm}\cdot\text{day}^{-1}$.

* $h_{\text{thres}}$ (*Height threshold*). Maximum allowed water level for a 
cluster to be considered emptied, used in the calculation of draining/irrigation 
plan delays. Expressed in $\text{cm}$.

Finally, it should be noted that the simulation involves random sampling (see
[Subsection @sec-hbp-details]), so that the seed of random number generation is 
an additional pseudo-parameter.


### Output

The output of this layer provides a simulation for the local hydrology of each 
cluster, summarized in the table below

| Variable                    | Units        | Description                     |
|-----------------------------|--------------|---------------------------------|
| $h_{c,t}$                   | $\text{m}^3$ | Cluster's water height          | 
| $I_{c,t}$                   | $\text{m}^3$ | Cluster's inflow                |
| $O_{c,t}$                   | $\text{m}^3$ | Cluster's outflow               |
: HBP model component outputs {#tbl-hbp-output}

### Detail {#sec-hbp-details}

#### Ditch inflows {#sec-ditch-inflows}

The first step consists in breaking down the total inflow to the lake, obtained through @eq-hydro-balance-symbolic, into inflows from individual ditches. Each paddy cluster is assumed to communicate with a single ditch (*cf.* @sec-data-rice-clusters), and the flow through a ditch is assumed to be proportional to the total area of clusters belonging to said ditch. Therefore, denoting by $I_i$ and $A_i$ the inflow and area of ditch $i$, and by $I$ the total inflow, we compute:

$$
I_i = \frac{A_i}{\sum _j A_j} \cdot I 
$$ {#eq-ditch-inflow}

#### Main Algorithm

In the following, we focus on the set of clusters that communicate with a specific ditch, whose inflow (estimated according to @sec-ditch-inflows) we denote by $Q$. The essence of the algorithm is to approximate as closely as possible the cluster's *ideal* inflows and outflows, with the constraint that the sum of the actual outflows from all clusters must equal $Q$.

Let us start by setting up some basic notation. We denote by:

$$
h_c ^\text{id}(t),\quad I_c ^\text{id}(t),\quad O_c ^\text{id}(t),
$$ {#eq-hbl-ideal-qts}

the ideal water level, inflow and outflow of cluster $c$ at time (*i.e.* day) $t$, and by:

$$
h_c ^\text{re}(t),\quad I_c ^\text{re}(t),\quad O_c ^\text{re}(t),
$$ {#eq-hbl-real-qts}

the corresponding real quantities. The area of cluster $c$, that provides the conversion between water volumes and column heights, is denoted by $A_c$. Precipitation and evapotranspiration water column values are denoted by:

$$
\text{P}(t),\quad \text{ETP}(t).
$$ {#eq-hbl-petp}

Finally, we will define below a *plan delay* accumulated for cluster $c$ at time $t$, denoted $D_c(t)$. This is computed recursively along the iterations of the algorithm, and its role will be clarified below.

The local balance algorithm proceeds iteratively as follows. At day $t$, assume that $h_c ^\text{re}(t-1)$ and $D(t-1)$ have already been computed; a single iteration consists of the following steps, which we describe in full detail below:

-   ***Step 1.*** Recovering the $h_c ^\text{id}(t)$, $I_c ^\text{id}(t)$ and $O_c ^\text{id}(t)$ from the irrigation and draining plan, applying the computed plan delay $D_c(t-1)$.

2.  ***Step 2.*** Computing $h_c ^\text{re}(t)$, $I_c ^\text{re}(t)$ and $O_c ^\text{re}(t)$ enforcing the constraint $\sum _c O_c ^\text{re}(t) = Q(t)$.

3.  ***Step 3.*** Computing the updated plan delays $D_c(t)$.

In order to initialize the iteration, we assume that at some initial time, say $t = 0$, we have $D_c(t=0) = 0$ $h_c ^\text{re}(t=0) = h_c ^\text{id}(t=1)$.

##### Step 1: ideal balance

The management data-set described @sec-data-albufera-management provides the ideal water level for each cluster and for every day of the year. Denoting by $d(t)$ the day of the year corresponding to $t$, the relevant entry of the management data-set is that corresponding to day:

$$
d^\prime_c(t) = d(t) - D_c(t-1),
$$ {#eq-hbl-yday-shifted}

where $D_c(t-1)$ is the accumulated plan delay for thi cluster. Therefore we set:

$$
h_c^\text{id}(t) = \text{Planned water level on day of year }d_c^\prime(t).
$$ {#eq-hbl-ideal-height}

To compute ideal inflow and outflow, we require:

$$
h_c^\text{id}(t) = \max(0,\,h_c^\text{re}(t-1)+\text{P}(t)-\text{ETP}(t)) + I_c ^\text{id}(t)-O_c ^\text{id}(t),
$$ {#eq-hbl-ideal-balance}

where we assume $I_c ^\text{id}(t) >0$ and $O_c ^\text{id}(t)>0$. Clearly, @eq-hbl-ideal-balance alone does not individually specify $I_c ^\text{id}(t)$ and $O_c ^\text{id}(t)$, but only their difference $\Delta _c (t) = I_c ^\text{id}(t) - O_c ^\text{id}(t)$. In order to fix both these quantities, we first define[^model_components-1]:

[^model_components-1]: The condition is again evaluated using the the management data-set, where the relevant variables are the `irrigation` and `draining` columns. The cluster is understood to be in flux if both `irrigation` and `draining` are `TRUE`.

$$
\begin{split}
(I_c ^\text{id}(t))^{(0)}&= \begin{cases}
  k  & \text{cluster planned to be in flux on day of year } d_c^\prime(t) \\
  0 & \text{otherwise}
\end{cases},\\
(O_c ^\text{id}(t))^{(0)}&=(I_c ^\text{id}(t))^{(0)}-\Delta_c(t).
\end{split}
$$ {#eq-hbl-ideal-flows-zero}

and, in order to ensure that flows are positive[^model_components-2], we finally set:

[^model_components-2]: The positivity of $I_c ^\text{id}(t)$ below is ensured by the fact that $(O_c ^\text{id}(t))^{(0)}\geq-\Delta_c(t)$ by construction.

$$
\begin{split}
O_c ^\text{id}(t) &= \max\lbrace(O_c ^\text{id}(t))^{(0)},\,0\rbrace\\
I_c ^\text{id}(t) &= O_c ^\text{id}(t) + \Delta_c ^\text{id}(t)
\end{split}
$$ {#eq-hbl-ideal-flows}

##### Step 2: real balance

Real flows are obtained from ideal ones (@eq-hbl-ideal-flows) in such a way to satisfy the constraint:

$$
\sum _c O_c ^\text{re}(t) = Q(t),
$$ {#eq-hbl-outflow-sum-constraint}

where the right-hand side is the total ditch flow computed earlier (@sec-ditch-inflows). At each time-step $t$, the cluster's index set is randomly permuted[^model_components-3], and the real flows are calculated as:

[^model_components-3]: With some abuse of notation, we assume the indexes $c$ and $c'$ in @eq-hbl-real-flows to be sorted according to this random permutation.

$$
\begin{split}
O_c ^\text{re}(t) &= \min \lbrace O_c ^\text{re}(t),\,Q(t)-\sum_{c'<c}O_{c'} ^\text{re}(t) \rbrace +
\dfrac{\max \lbrace 0, Q(t)-\sum_{c'}O_{c'} ^\text{re}(t)\rbrace}{\text{number of clusters}},\\
I_c ^\text{re}(t) &= \max\lbrace I_c ^\text{id}(t)-O_c ^\text{id}(t) + O_c ^\text{re}(t),\,0 \rbrace
\end{split}
$$ {#eq-hbl-real-flows}

In words, clusters are emptied in a random order within the allowed capacity of the corresponding ditch (*i.e.* its actual total flow) - if the sum of ideal outflows is less than capacity, the remaining outflow is equally shared among clusters. Using @eq-hbl-real-flows, we finally determine the real water level achieved as:

$$
h_c^\text{re}(t) = \max(0,\,h_c^\text{re}(t-1)+\text{P}(t)-\text{ETP}(t)) + I_c ^\text{re}(t)-O_c ^\text{re}(t),
$$ {#eq-hbl-real-balance}

to be compared with @eq-hbl-ideal-balance.

##### Step 3: updating the plan delay

The purpose of the plan delay $D_c(t)$ is to allow all clusters to be emptied as required by the ideal management plan, which may be hindered on the originally scheduled days by the first of @eq-hbl-real-flows, since this sets to zero the real outflows for some clusters whenever the ditch's flow is saturated.

The updated value $D_c(t)$ is obtained as follows. If $d(t)$ (the *actual* day of year) is outside of the window $W = [\text{20th of April},\,\text{15th of October}]$, we reset all $D_c(t) = 0$. Otherwise, if $h_c ^{\text{id}}(t)>0$ or $h_c ^{\text{re}}(t)<H_{\text{thres}}$, the plan delay is unchanged for this cluster: $D_c(t) = D_c(t-1)$. Finally, if $h_c ^{\text{id}}(t)=0$ but $h_c ^{\text{re}}(t)>H_{\text{thres}}$, we set $D_c(t) = D_c(t-1) + 1$.

## CA: Chemical Applications

TBD.

## CT: Chemical Transport

This model component describes the evolution of chemical masses in the three compartments of foliage, water and sediment. This is obtained by solving the
system of differential equations that describes the dynamics of chemicals, 
through a semi-analytic approach with suitable approximations and 
simplifications.

### Input

TBD.

### Output

TBD.

### Details

The evolution of masses in the foliage, water and sediment compartments is described by the following system of differential equations:

$$
\begin{split}
\dfrac{\text d{m}_f}{\text d t} & = -(k_f+w)m_f+a_f\\
\dfrac{\text d{m}_w}{\text d t} & = -(k_w+d_w+s+\frac{O}{V})m_w+d_sm_s+wm_f+a_w-\sigma(\frac{m_w}{\rho V}) \\
\dfrac{\text d{m}_s}{\text d t} & = (d_w+s)m_w-(k_s+d_s)m_s+a_s+\sigma(\frac{m_w}{\rho V})
\end{split}
$$ {#eq-ct-ode}

where:

- $a_{f,w,s}$ are the mass application rates of the chemical in the three compartments,
- $k_{f,w,s}$ are the degradation rates of the chemical in the three compartments,
- $d_w$ and $d_s$ are the water-sediment diffusion rates,
- $s$ is the settling rate,
- $w$ is the washout rate,
- $O$ is the outflow rate of the rice field,
- $V$ is the volume of water in the rice field, 
- $\rho$ is the chemical solubility in water,
- $\sigma(x)$ is a function (not further specified, see below) that grows 
quickly for $x > 1$, and vanishes for $x \leq 1$. This function accounts for 
solubility. (TODO: motivate the inclusion of exactly these processes)

Strictly speaking, all these terms have instantaneous time dependence^[
This observation also includes pure physico-chemical "constants" such as 
degradation rates, where the time dependence would stem from *temperature* 
dependence.
]. Apart from making the [system @eq-ct-ode] hard to attack by analytic means, 
such a dependence is troubling because we don't have access to the exact time 
dependence of the majority of these terms (*e.g.* outflow, volume or chemical 
applications), our input consisting of simple daily average/cumulative values.
On the other hand, if all the terms were constant, and if we could neglect $\sigma$, the solution of @eq-ct-ode would be immediate, as the corresponding system becomes a linear ODE with constant coefficients, in addition whose eigenvalues and eigenvectors can be computed explicitly. 

What we use in practice is an intermediate semi-analytic approach that allows us 
to compute daily values of $m_{f,w,s}$, which we can briefly summarize as 
follows. The time evolution of $m_{f,w,s}$ in a daily time-step (from $t$ to 
$t+1$, say, assuming $t$ is measured in days) is obtained 
through the following four consecutive stages:

1. We compute the exact evolution of $m_{f,w,s}$ according to the linear ODE 
obtained by disregarding the processes of outflow, chemical application and 
solubility, and using daily constant values for all the remaining constants 
involved (described in more detail below).
1. We compute the $m_w$ losses due to outflow as if they happened 
instantaneously after the processes computed in the previous step took place,
with the water volume of the rice paddy varying from $V(t)+O(t)$ to $V(t)$^[
Recall that, in the notation of TODO, $V(t)$ denotes the final volume on day 
$t$.]   
1. We compute the mass applications again as instantaneous, after the losses 
in the water compartment due to outflows took place.
1. We compare the resulting $m_w$ with the maximum amount allowed by the 
solubility in water, that is $m_w ^{\text{max}}(t) = \rho V(t)$ and transfer any
excess to the sediment compartment ($m_s$).

In the following, we describe in full detail the computations involved in these 
four steps.

#### Step 1. Linear ODE evolution (physico-chemical processes)

Disregarding outflow, mass application and solubility, we get a linear ODE of 
the form:

$$
\begin{split}
\dfrac{\text d{m}_f}{\text d t} & = \gamma m_f,\\
\dfrac{\text d{m}_w}{\text d t} & = a_{ww} m_w+a_{ws}m_s + w m_f, \\
\dfrac{\text d{m}_s}{\text d t} & = a_{sw}m_w+a_{ss}m_s,
\end{split}
$$ {#eq-ct-ode-linear}

with:

$$
\begin{split}
\gamma                  &= -(k_f + w),\\
a_{ww}                  &= - (k_w + d_ w +s)\\
a_{ws}                  &= d_s\\
a_{sw}                  &= d_w+s\\
a_{ss}                  &= -(k_s+d_s)
\end{split}
$$ {#eq-ct-ode-linear-coeffs}

where the various physico-chemical parameters are assumed to be constant during
a daily time-step (see Sec. TODO for the actual numerical values).

The evolution of $m_f$ is easily obtained:

$$
m_f(t) = e^{\gamma t}m_f(0).
$$ {#eq-mf-evolution}

Plugging this into the three-dimensional system [-@eq-ct-ode-linear] we obtain a
reduced two-dimensional system for the water-sediment compartments:

$$
\begin{split}
\dfrac{\text d{m}_w}{\text d t} & = a_{ww} m_w+a_{ws}m_s + w e ^{\gamma t}m_f(0), \\
\dfrac{\text d{m}_s}{\text d t} & = a_{sw}m_w+a_{ss}m_s,
\end{split}
$$ {#eq-ct-ode-linear-reduced}

which is solved explicitly with standard methods[^2d-ode-solution].

[^2d-ode-solution]: Letting $x = (m_w,\,m_s)^T$ and $b = w(m_f(0),0)^T$, the 
  system can be rewritten in the form:
  $$ \dot x = Ax + e^{\gamma t }b $$ 
  where $$ A = \begin{pmatrix} a_{ww} & a_{ws} \\ a_{sw} & a_{ss} \end{pmatrix} $$
  The general solution reads:
  $$
  x(t) = e^{At}x(0)+(e^{At}-e^{\gamma t}I)(A-\gamma I)^{-1}b
  $$
  where $I$ is the identity matrix. Notice that the exponential can be computed
  explicitly from the eigenvalues of $A$:
  $$
  e^{At} = e^{\lambda _+ t} P_+ + e^{\lambda _- t} P_-,
  $$
  with:
  $$
  \lambda _{\pm} = \frac{\text{Tr}A}{2} \sqrt{\left(\frac{\text{Tr}A}{2}\right)^2 - \det A}
  $$
  and
  $$
  P_{\pm} = \pm \frac{1}{\lambda _+ - \lambda _-}(A-\lambda _{\mp})
  $$
