# ERAHUMED model components

This Chapter provides detailed descriptions of the various components of the ERAHUMED model, briefly introduced in @sec-birds-eye-view.

## INP: Input Data {#sec-inp}

The purpose of this model component is simply to collect the empirical data that
provides the observational input to all subsequent modeling layers. This data consists of hydrological and meteorological time series data for the Albufera lake in the desired time frame.

### Input

The only inputs to this modeling layer are the two aforementioned time-series data-sets.

Hydrological data consists of the direct measurements of the Albufera lake's 
daily water levels and outflows. Since the lake has three estuaries (*Gola de Pujol*, *Gola del Perellonet* and *Gola del Perelló*), this data 
amounts to four daily time series. The actual dataset bundled with the ERAHUMED
software was obtained from the public data repository compiled by the *Confederación Hidrográfica del Júcar* (TODO: Ref.), and is described in more detail in [Appendix @sec-data-hydro].

Meteorological data consists of the daily measurements of precipitation and evapotranspiration per unit are, and temperature (average, maximum and minimum). This amounts to five daily the series. The actual data bundled with the ERAHUMED
software was obtained (TODO: where), and is described in more detail in [Appendix @sec-data-meteo].

The time-series inputs described above are collected in the table below (the common index $t$ refers to the time - *i.e.* day - of observation).

| Input                     | Units        | Description                       |
|---------------------------|--------------|-----------------------------------|
| $L_t$                     | $\text{m}$   | Lake water level                  |
| $O_t^{\text{Pujol}}$      | $\text{m}^3$ | *Pujol* daily outflow             |
| $O_t^{\text{Perelló}}$    | $\text{m}^3$ | *Perelló* daily outflow           |
| $O_t^{\text{Perellonet}}$ | $\text{m}^3$ | *Perellonet* daily outflow        |
| $\text{P}_t$              | $\text{mm}$  | Precipitation (per unit area)     |
| $\text{ETP}_t$            | $\text{mm}$  | Evapotranspiration (per unit area)|
| $T_t^{\text{max}}$        | $\text{°C}$  | Maximum temperature               |
| $T_t^{\text{min}}$        | $\text{°C}$  | Minimum temperature               |
| $T_t^{\text{ave}}$        | $\text{°C}$  | Average temperature               |

: Observational input to the ERAHUMED model (INP model component). {#tbl-inp-time-series}


### Output

This modeling layer does not involve any actual computation, and its output is simply a time-series data-set obtained as the combination of the two input data-sets, *i.e.* the collection of time series of @tbl-inp-time-series.


## HBA: Hydrological Balance of the Albufera lake

The purpose of this model component is to compute the total daily inflow to the Albufera lake. The relevant equation expressing the hydrological balance is:

$$
\text{Volume Change} = \text{Inflow} - \text{Outflow} + \text{Precipitation} - \text{Evapotranspiration}
$$ {#eq-hydro-balance-symbolic}

where the unknown is $\text{Inflow}$, whereas the remaining terms are obtained
from observational data, as described in the previous Section (@sec-inp).

### Input

The inputs specific to this layer are two numerical functions converting water heights into the water *volumes* that appear in @eq-hydro-balance-symbolic. Specifically:

* The lake's *storage curve* converts the measured lake's level into a total water volume.
* The *precipitation-evapotranspiration volume function* (or, for the sake of
brevity, *P-ETP function*), that converts precipitation and evapotranspiration values *per unit area* into an overall water volume difference.

Even though the R interface to the ERAHUMED software allows arbitrary definitions, the graphical user interface assumes a linear approximation for both these functions. Therefore, the storage curve is assumed to take the form:

$$
V_t = m \cdot L_t + q,
$$ {#eq-storage-function}
where $V_t$ is the (daily) water volume of the lake, $L_t$ the corresponding
water level (*cf.* @tbl-inp-time-series), and $m$ and $q$ are numerical coefficients^[In fact, for the purpose of computing volume *changes* entering the hydrological balance @eq-hydro-balance-symbolic, only the slope $m$ is required.]. Correspondingly, the P-ETP function reads: 

$$
\Delta V_t ^{\text{P-ETP}} = \alpha \cdot \text{P}_t - \beta\cdot \text{ETP}_t,
$$ {#eq-petp-function}
where the left-hand side represents the relevant water volume difference, whereas the $\text{P}$ and $\text{ETP}$ terms in the right-hand side are the measured precipitation and evapotranspiration levels per unit area (*cf.* @tbl-inp-time-series). The actual default values of $m$, $q$, $\alpha$ and $\beta$ are documented in [Appendix @sec-storage-curve].

### Output

The output of this model consists of the time-series collected in the table
below.

| Variable                  | Units        | Description                       |
|---------------------------|--------------|-----------------------------------|
| $V_t$                     | $\text{m}^3$ | Lake water volume                 | 
| $I_t$                     | $\text{m}^3$ | Lake total inflow                 |
| $O_t$                     | $\text{m}^3$ | Lake total outflow                |
: HBA model component outputs {#tbl-hba-output}

### Details

Using the notation introduced in the previous Subsections, we can rewrite @eq-hydro-balance-symbolic as follows:

$$
V_{t+1} - V_t = I_t -O_t +\Delta V^{\text {ETP}}_t,
$$ {#eq-hydro-balance-explicit}

where $V_t$ and $\Delta V^{\text {ETP}}_t$ are computed through the storage and
P-ETP functions, as in Eqs. [-@eq-storage-function] and [-@eq-petp-function]. 
The only terms that requires further clarification in @eq-hydro-balance-explicit
is $O_t$, the total outflow from the lake.

Strictly speaking, $O_t$ is not merely the sum of $O_t^{\text{Pujol}}$, 
$O_t^{\text{Perelló}}$ and $O_t^{\text{Perellonet}}$, but is rather calculated 
as follows:

$$
O_t = \max
\left[
O_t^{\text{Pujol}} + O_t^{\text{Perelló}} + O_t^{\text{Perellonet}},\, 
\Delta V^{\text {ETP}}_t+V_t-V_{t+1}
\right].
$$ {#eq-total-outflow}

The rationale is that the simple sum of estuaries outflows omits potentially 
important contributions from *water recirculation*, that is to say,
water being pumped out from the lake for rice-field irrigation, by the so-called 
*tancats*. Such amount of recirculated water is hard to estimate and,
in the lack of a better model, we simply assume this to be negligible, *except* 
when a positive amount is required by @eq-hydro-balance-explicit itself, due 
the physical constraint that $I_t \geq 0$.

Once $O_t$ is calculated through @eq-total-outflow, $I_t$ can be immediately 
obtained from @eq-hydro-balance-explicit. Notice that whenever the 
aforementioned compensating outflow term due to water recirculation is included 
(which happens when the maximum in Eq. [-@eq-total-outflow] is given by the 
second term), the total inflow is always estimated to be zero.

## HBP: Hydrological Balance of rice Paddy clusters

As anticipated, the simulation of local hydrological balance of rice paddies involves an important set of assumptions regarding the management of water levels. We detail in this section the algorithm used in our simulations.

### Model inputs and parameters

The two main observational inputs for this modeling layer are:

-   The output of the "Global balance" model, described in the previous Section, and in particular the daily total inflow to the Albufera lake, obtained from @eq-hydro-balance-symbolic. As explained below in @sec-ditch-inflows, this is used to estimate the inflow from each of the twenty-six ditches that flow into the Albufera.

-   The measured amounts of precipitation and evapotranspiration, which is the same data-set involved in global balance calculations, and is described in @sec-data-meteo.

The subdivision of the rice fields surface of the Albufera into clusters of a specific rice variety, and the corresponding assignation of a single ditch to each cluster is described in @sec-data-rice-clusters.

Our assumptions on the management of water levels are subsumed in the data-set described in @sec-data-albufera-management, that provides the irrigation and draining plans and the ideal water levels for a cluster of a given rice variety, for each day of the year.

Finally, the model receives a few other numerical input parameters:

-   *Ideal flow rate* $k$. Rate at which water flows through rice paddies when these are being simultaneously irrigated and drained, with the overall level being kept constant. Expressed in $\text{cm}\cdot\text{day}^{-1}$. \[TODO: this must be some cumbersome paraphrase of a technical expression which I don't know about.\].

-   *Height threshold* $H_{\text{thres}}$. Maximum allowed water level for a cluster to be considered emptied, used in the calculation of draining/irrigation plan delays. Expressed in $\text{cm}$.

### Ditch inflows {#sec-ditch-inflows}

The first step consists in breaking down the total inflow to the lake, obtained through @eq-hydro-balance-symbolic, into inflows from individual ditches. Each paddy cluster is assumed to communicate with a single ditch (*cf.* @sec-data-rice-clusters), and the flow through a ditch is assumed to be proportional to the total area of clusters belonging to said ditch. Therefore, denoting by $I_i$ and $A_i$ the inflow and area of ditch $i$, and by $I$ the total inflow, we compute:

$$
I_i = \frac{A_i}{\sum _j A_j} \cdot I 
$$ {#eq-ditch-inflow}

### Main Algorithm

In the following, we focus on the set of clusters that communicate with a specific ditch, whose inflow (estimated according to @sec-ditch-inflows) we denote by $Q$. The essence of the algorithm is to approximate as closely as possible the cluster's *ideal* inflows and outflows, with the constraint that the sum of the actual outflows from all clusters must equal $Q$.

Let us start by setting up some basic notation. We denote by:

$$
h_c ^\text{id}(t),\quad I_c ^\text{id}(t),\quad O_c ^\text{id}(t),
$$ {#eq-hbl-ideal-qts}

the ideal water level, inflow and outflow of cluster $c$ at time (*i.e.* day) $t$, and by:

$$
h_c ^\text{re}(t),\quad I_c ^\text{re}(t),\quad O_c ^\text{re}(t),
$$ {#eq-hbl-real-qts}

the corresponding real quantities. The area of cluster $c$, that provides the conversion between water volumes and column heights, is denoted by $A_c$. Precipitation and evapotranspiration water column values are denoted by:

$$
\text{P}(t),\quad \text{ETP}(t).
$$ {#eq-hbl-petp}

Finally, we will define below a *plan delay* accumulated for cluster $c$ at time $t$, denoted $D_c(t)$. This is computed recursively along the iterations of the algorithm, and its role will be clarified below.

The local balance algorithm proceeds iteratively as follows. At day $t$, assume that $h_c ^\text{re}(t-1)$ and $D(t-1)$ have already been computed; a single iteration consists of the following steps, which we describe in full detail below:

-   ***Step 1.*** Recovering the $h_c ^\text{id}(t)$, $I_c ^\text{id}(t)$ and $O_c ^\text{id}(t)$ from the irrigation and draining plan, applying the computed plan delay $D_c(t-1)$.

2.  ***Step 2.*** Computing $h_c ^\text{re}(t)$, $I_c ^\text{re}(t)$ and $O_c ^\text{re}(t)$ enforcing the constraint $\sum _c O_c ^\text{re}(t) = Q(t)$.

3.  ***Step 3.*** Computing the updated plan delays $D_c(t)$.

In order to initialize the iteration, we assume that at some initial time, say $t = 0$, we have $D_c(t=0) = 0$ $h_c ^\text{re}(t=0) = h_c ^\text{id}(t=1)$.

#### Step 1: ideal balance

The management data-set described @sec-data-albufera-management provides the ideal water level for each cluster and for every day of the year. Denoting by $d(t)$ the day of the year corresponding to $t$, the relevant entry of the management data-set is that corresponding to day:

$$
d^\prime_c(t) = d(t) - D_c(t-1),
$$ {#eq-hbl-yday-shifted}

where $D_c(t-1)$ is the accumulated plan delay for thi cluster. Therefore we set:

$$
h_c^\text{id}(t) = \text{Planned water level on day of year }d_c^\prime(t).
$$ {#eq-hbl-ideal-height}

To compute ideal inflow and outflow, we require:

$$
h_c^\text{id}(t) = \max(0,\,h_c^\text{re}(t-1)+\text{P}(t)-\text{ETP}(t)) + I_c ^\text{id}(t)-O_c ^\text{id}(t),
$$ {#eq-hbl-ideal-balance}

where we assume $I_c ^\text{id}(t) >0$ and $O_c ^\text{id}(t)>0$. Clearly, @eq-hbl-ideal-balance alone does not individually specify $I_c ^\text{id}(t)$ and $O_c ^\text{id}(t)$, but only their difference $\Delta _c (t) = I_c ^\text{id}(t) - O_c ^\text{id}(t)$. In order to fix both these quantities, we first define[^model_components-1]:

[^model_components-1]: The condition is again evaluated using the the management data-set, where the relevant variables are the `irrigation` and `draining` columns. The cluster is understood to be in flux if both `irrigation` and `draining` are `TRUE`.

$$
\begin{split}
(I_c ^\text{id}(t))^{(0)}&= \begin{cases}
  k  & \text{cluster planned to be in flux on day of year } d_c^\prime(t) \\
  0 & \text{otherwise}
\end{cases},\\
(O_c ^\text{id}(t))^{(0)}&=(I_c ^\text{id}(t))^{(0)}-\Delta_c(t).
\end{split}
$$ {#eq-hbl-ideal-flows-zero}

and, in order to ensure that flows are positive[^model_components-2], we finally set:

[^model_components-2]: The positivity of $I_c ^\text{id}(t)$ below is ensured by the fact that $(O_c ^\text{id}(t))^{(0)}\geq-\Delta_c(t)$ by construction.

$$
\begin{split}
O_c ^\text{id}(t) &= \max\lbrace(O_c ^\text{id}(t))^{(0)},\,0\rbrace\\
I_c ^\text{id}(t) &= O_c ^\text{id}(t) + \Delta_c ^\text{id}(t)
\end{split}
$$ {#eq-hbl-ideal-flows}

#### Step 2: real balance

Real flows are obtained from ideal ones (@eq-hbl-ideal-flows) in such a way to satisfy the constraint:

$$
\sum _c O_c ^\text{re}(t) = Q(t),
$$ {#eq-hbl-outflow-sum-constraint}

where the right-hand side is the total ditch flow computed earlier (@sec-ditch-inflows). At each time-step $t$, the cluster's index set is randomly permuted[^model_components-3], and the real flows are calculated as:

[^model_components-3]: With some abuse of notation, we assume the indexes $c$ and $c'$ in @eq-hbl-real-flows to be sorted according to this random permutation.

$$
\begin{split}
O_c ^\text{re}(t) &= \min \lbrace O_c ^\text{re}(t),\,Q(t)-\sum_{c'<c}O_{c'} ^\text{re}(t) \rbrace +
\dfrac{\max \lbrace 0, Q(t)-\sum_{c'}O_{c'} ^\text{re}(t)\rbrace}{\text{number of clusters}},\\
I_c ^\text{re}(t) &= \max\lbrace I_c ^\text{id}(t)-O_c ^\text{id}(t) + O_c ^\text{re}(t),\,0 \rbrace
\end{split}
$$ {#eq-hbl-real-flows}

In words, clusters are emptied in a random order within the allowed capacity of the corresponding ditch (*i.e.* its actual total flow) - if the sum of ideal outflows is less than capacity, the remaining outflow is equally shared among clusters. Using @eq-hbl-real-flows, we finally determine the real water level achieved as:

$$
h_c^\text{re}(t) = \max(0,\,h_c^\text{re}(t-1)+\text{P}(t)-\text{ETP}(t)) + I_c ^\text{re}(t)-O_c ^\text{re}(t),
$$ {#eq-hbl-real-balance}

to be compared with @eq-hbl-ideal-balance.

#### Step 3: updating the plan delay

The purpose of the plan delay $D_c(t)$ is to allow all clusters to be emptied as required by the ideal management plan, which may be hindered on the originally scheduled days by the first of @eq-hbl-real-flows, since this sets to zero the real outflows for some clusters whenever the ditch's flow is saturated.

The updated value $D_c(t)$ is obtained as follows. If $d(t)$ (the *actual* day of year) is outside of the window $W = [\text{20th of April},\,\text{15th of October}]$, we reset all $D_c(t) = 0$. Otherwise, if $h_c ^{\text{id}}(t)>0$ or $h_c ^{\text{re}}(t)<H_{\text{thres}}$, the plan delay is unchanged for this cluster: $D_c(t) = D_c(t-1)$. Finally, if $h_c ^{\text{id}}(t)=0$ but $h_c ^{\text{re}}(t)>H_{\text{thres}}$, we set $D_c(t) = D_c(t-1) + 1$.

## CA: Chemical Applications

## CT: Chemical Transport
